/* Generated By:JavaCC: Do not edit this line. SqlParserImplConstants.java */
package org.apache.calcite.sql.parser.impl;

public interface SqlParserImplConstants {

  int EOF = 0;
  int A = 1;
  int ABS = 2;
  int ABSENT = 3;
  int ABSOLUTE = 4;
  int ACTION = 5;
  int ADA = 6;
  int ADD = 7;
  int ADMIN = 8;
  int AFTER = 9;
  int ALL = 10;
  int ALLOCATE = 11;
  int ALLOW = 12;
  int ALTER = 13;
  int ALWAYS = 14;
  int AND = 15;
  int ANY = 16;
  int APPLY = 17;
  int ARE = 18;
  int ARRAY = 19;
  int ARRAY_AGG = 20;
  int ARRAY_CONCAT_AGG = 21;
  int ARRAY_MAX_CARDINALITY = 22;
  int AS = 23;
  int ASC = 24;
  int ASENSITIVE = 25;
  int ASSERTION = 26;
  int ASSIGNMENT = 27;
  int ASYMMETRIC = 28;
  int AT = 29;
  int ATOMIC = 30;
  int ATTRIBUTE = 31;
  int ATTRIBUTES = 32;
  int AUTHORIZATION = 33;
  int AVG = 34;
  int BEFORE = 35;
  int BEGIN = 36;
  int BEGIN_FRAME = 37;
  int BEGIN_PARTITION = 38;
  int BERNOULLI = 39;
  int BETWEEN = 40;
  int BIGINT = 41;
  int BINARY = 42;
  int BIT = 43;
  int BLOB = 44;
  int BOOLEAN = 45;
  int BOOL = 46;
  int BOTH = 47;
  int BREADTH = 48;
  int BY = 49;
  int C = 50;
  int CALL = 51;
  int CALLED = 52;
  int CARDINALITY = 53;
  int CASCADE = 54;
  int CASCADED = 55;
  int CASE = 56;
  int CAST = 57;
  int CATALOG = 58;
  int CATALOG_NAME = 59;
  int CEIL = 60;
  int CEILING = 61;
  int CENTURY = 62;
  int CHAIN = 63;
  int CHAR = 64;
  int CHAR_LENGTH = 65;
  int CHARACTER = 66;
  int CHARACTER_LENGTH = 67;
  int CHARACTER_SET_CATALOG = 68;
  int CHARACTER_SET_NAME = 69;
  int CHARACTER_SET_SCHEMA = 70;
  int CHARACTERISTICS = 71;
  int CHARACTERS = 72;
  int CHECK = 73;
  int CLASSIFIER = 74;
  int CLASS_ORIGIN = 75;
  int CLOB = 76;
  int CLOSE = 77;
  int COALESCE = 78;
  int COBOL = 79;
  int COLLATE = 80;
  int COLLATION = 81;
  int COLLATION_CATALOG = 82;
  int COLLATION_NAME = 83;
  int COLLATION_SCHEMA = 84;
  int COLLECT = 85;
  int COLUMN = 86;
  int COLUMN_NAME = 87;
  int COMMAND_FUNCTION = 88;
  int COMMAND_FUNCTION_CODE = 89;
  int COMMIT = 90;
  int COMMITTED = 91;
  int CONDITION = 92;
  int CONDITIONAL = 93;
  int CONDITION_NUMBER = 94;
  int CONNECT = 95;
  int CONNECTION = 96;
  int CONNECTION_NAME = 97;
  int CONSTRAINT = 98;
  int CONSTRAINT_CATALOG = 99;
  int CONSTRAINT_NAME = 100;
  int CONSTRAINT_SCHEMA = 101;
  int CONSTRAINTS = 102;
  int CONSTRUCTOR = 103;
  int CONTAINS = 104;
  int CONTINUE = 105;
  int CONVERT = 106;
  int CORR = 107;
  int CORRESPONDING = 108;
  int COUNT = 109;
  int COVAR_POP = 110;
  int COVAR_SAMP = 111;
  int CREATE = 112;
  int CROSS = 113;
  int CUBE = 114;
  int CUME_DIST = 115;
  int CURRENT = 116;
  int CURRENT_CATALOG = 117;
  int CURRENT_DATE = 118;
  int CURRENT_DEFAULT_TRANSFORM_GROUP = 119;
  int CURRENT_PATH = 120;
  int CURRENT_ROLE = 121;
  int CURRENT_ROW = 122;
  int CURRENT_SCHEMA = 123;
  int CURRENT_TIME = 124;
  int CURRENT_TIMESTAMP = 125;
  int CURRENT_TRANSFORM_GROUP_FOR_TYPE = 126;
  int CURRENT_USER = 127;
  int CURSOR = 128;
  int CURSOR_NAME = 129;
  int CYCLE = 130;
  int DATA = 131;
  int DATABASE = 132;
  int DATE = 133;
  int DATE_DIFF = 134;
  int DATE_TRUNC = 135;
  int DATETIME = 136;
  int DATETIME_DIFF = 137;
  int DATETIME_INTERVAL_CODE = 138;
  int DATETIME_INTERVAL_PRECISION = 139;
  int DATETIME_TRUNC = 140;
  int DAY = 141;
  int DAYOFWEEK = 142;
  int DAYOFYEAR = 143;
  int DAYS = 144;
  int DEALLOCATE = 145;
  int DEC = 146;
  int DECADE = 147;
  int DECIMAL = 148;
  int DECLARE = 149;
  int DEFAULT_ = 150;
  int DEFAULTS = 151;
  int DEFERRABLE = 152;
  int DEFERRED = 153;
  int DEFINE = 154;
  int DEFINED = 155;
  int DEFINER = 156;
  int DEGREE = 157;
  int DELETE = 158;
  int DENSE_RANK = 159;
  int DEPTH = 160;
  int DEREF = 161;
  int DERIVED = 162;
  int DESC = 163;
  int DESCRIBE = 164;
  int DESCRIPTION = 165;
  int DESCRIPTOR = 166;
  int DETERMINISTIC = 167;
  int DIAGNOSTICS = 168;
  int DISALLOW = 169;
  int DISCONNECT = 170;
  int DISPATCH = 171;
  int DISTINCT = 172;
  int DOMAIN = 173;
  int DOT_FORMAT = 174;
  int DOUBLE = 175;
  int DOW = 176;
  int DOY = 177;
  int DROP = 178;
  int DYNAMIC = 179;
  int DYNAMIC_FUNCTION = 180;
  int DYNAMIC_FUNCTION_CODE = 181;
  int EACH = 182;
  int ELEMENT = 183;
  int ELSE = 184;
  int EMPTY = 185;
  int ENCODING = 186;
  int END = 187;
  int END_EXEC = 188;
  int END_FRAME = 189;
  int END_PARTITION = 190;
  int EPOCH = 191;
  int EQUALS = 192;
  int ERROR = 193;
  int ESCAPE = 194;
  int EVERY = 195;
  int EXCEPT = 196;
  int EXCEPTION = 197;
  int EXCLUDE = 198;
  int EXCLUDING = 199;
  int EXEC = 200;
  int EXECUTE = 201;
  int EXISTS = 202;
  int EXP = 203;
  int EXPLAIN = 204;
  int EXTEND = 205;
  int EXTERNAL = 206;
  int EXTRACT = 207;
  int FALSE = 208;
  int FETCH = 209;
  int FILTER = 210;
  int FINAL = 211;
  int FIRST = 212;
  int FIRST_VALUE = 213;
  int FLOAT = 214;
  int FLOOR = 215;
  int FOLLOWING = 216;
  int FOR = 217;
  int FORMAT = 218;
  int FOREIGN = 219;
  int FORTRAN = 220;
  int FOUND = 221;
  int FRAC_SECOND = 222;
  int FRAME_ROW = 223;
  int FREE = 224;
  int FRIDAY = 225;
  int FROM = 226;
  int FULL = 227;
  int FUNCTION = 228;
  int FUSION = 229;
  int G = 230;
  int GENERAL = 231;
  int GENERATED = 232;
  int GEOMETRY = 233;
  int GET = 234;
  int GLOBAL = 235;
  int GO = 236;
  int GOTO = 237;
  int GRANT = 238;
  int GRANTED = 239;
  int GROUP = 240;
  int GROUP_CONCAT = 241;
  int GROUPING = 242;
  int GROUPS = 243;
  int HAVING = 244;
  int HIERARCHY = 245;
  int HOLD = 246;
  int HOP = 247;
  int HOUR = 248;
  int HOURS = 249;
  int IDENTITY = 250;
  int IGNORE = 251;
  int ILIKE = 252;
  int IMMEDIATE = 253;
  int IMMEDIATELY = 254;
  int IMPLEMENTATION = 255;
  int IMPORT = 256;
  int IN = 257;
  int INCLUDE = 258;
  int INCLUDING = 259;
  int INCREMENT = 260;
  int INDICATOR = 261;
  int INITIAL = 262;
  int INITIALLY = 263;
  int INNER = 264;
  int INOUT = 265;
  int INPUT = 266;
  int INSENSITIVE = 267;
  int INSERT = 268;
  int INSTANCE = 269;
  int INSTANTIABLE = 270;
  int INT = 271;
  int INTEGER = 272;
  int INTERSECT = 273;
  int INTERSECTION = 274;
  int INTERVAL = 275;
  int INTO = 276;
  int INVOKER = 277;
  int IS = 278;
  int ISODOW = 279;
  int ISOYEAR = 280;
  int ISOLATION = 281;
  int JAVA = 282;
  int JOIN = 283;
  int JSON = 284;
  int JSON_ARRAY = 285;
  int JSON_ARRAYAGG = 286;
  int JSON_EXISTS = 287;
  int JSON_OBJECT = 288;
  int JSON_OBJECTAGG = 289;
  int JSON_QUERY = 290;
  int JSON_VALUE = 291;
  int K = 292;
  int KEY = 293;
  int KEY_MEMBER = 294;
  int KEY_TYPE = 295;
  int LABEL = 296;
  int LAG = 297;
  int LANGUAGE = 298;
  int LARGE = 299;
  int LAST = 300;
  int LAST_VALUE = 301;
  int LATERAL = 302;
  int LEAD = 303;
  int LEADING = 304;
  int LEFT = 305;
  int LENGTH = 306;
  int LEVEL = 307;
  int LIBRARY = 308;
  int LIKE = 309;
  int LIKE_REGEX = 310;
  int LIMIT = 311;
  int LN = 312;
  int LOCAL = 313;
  int LOCALTIME = 314;
  int LOCALTIMESTAMP = 315;
  int LOCATOR = 316;
  int LOWER = 317;
  int M = 318;
  int MAP = 319;
  int MATCH = 320;
  int MATCHED = 321;
  int MATCHES = 322;
  int MATCH_NUMBER = 323;
  int MATCH_RECOGNIZE = 324;
  int MAX = 325;
  int MAXVALUE = 326;
  int MEASURES = 327;
  int MEMBER = 328;
  int MERGE = 329;
  int MESSAGE_LENGTH = 330;
  int MESSAGE_OCTET_LENGTH = 331;
  int MESSAGE_TEXT = 332;
  int METHOD = 333;
  int MICROSECOND = 334;
  int MILLISECOND = 335;
  int MILLENNIUM = 336;
  int MIN = 337;
  int MINUTE = 338;
  int MINUTES = 339;
  int MINVALUE = 340;
  int MOD = 341;
  int MODIFIES = 342;
  int MODULE = 343;
  int MONDAY = 344;
  int MONTH = 345;
  int MONTHS = 346;
  int MORE_ = 347;
  int MULTISET = 348;
  int MUMPS = 349;
  int NAME = 350;
  int NAMES = 351;
  int NANOSECOND = 352;
  int NATIONAL = 353;
  int NATURAL = 354;
  int NCHAR = 355;
  int NCLOB = 356;
  int NESTING = 357;
  int NEW = 358;
  int NEXT = 359;
  int NO = 360;
  int NONE = 361;
  int NORMALIZE = 362;
  int NORMALIZED = 363;
  int NOT = 364;
  int NTH_VALUE = 365;
  int NTILE = 366;
  int NULL = 367;
  int NULLABLE = 368;
  int NULLIF = 369;
  int NULLS = 370;
  int NUMBER = 371;
  int NUMERIC = 372;
  int OBJECT = 373;
  int OCCURRENCES_REGEX = 374;
  int OCTET_LENGTH = 375;
  int OCTETS = 376;
  int OF = 377;
  int OFFSET = 378;
  int OLD = 379;
  int OMIT = 380;
  int ON = 381;
  int ONE = 382;
  int ONLY = 383;
  int OPEN = 384;
  int OPTION = 385;
  int OPTIONS = 386;
  int OR = 387;
  int ORDER = 388;
  int ORDERING = 389;
  int ORDINAL = 390;
  int ORDINALITY = 391;
  int OTHERS = 392;
  int OUT = 393;
  int OUTER = 394;
  int OUTPUT = 395;
  int OVER = 396;
  int OVERLAPS = 397;
  int OVERLAY = 398;
  int OVERRIDING = 399;
  int PAD = 400;
  int PARAMETER = 401;
  int PARAMETER_MODE = 402;
  int PARAMETER_NAME = 403;
  int PARAMETER_ORDINAL_POSITION = 404;
  int PARAMETER_SPECIFIC_CATALOG = 405;
  int PARAMETER_SPECIFIC_NAME = 406;
  int PARAMETER_SPECIFIC_SCHEMA = 407;
  int PARTIAL = 408;
  int PARTITION = 409;
  int PASCAL = 410;
  int PASSING = 411;
  int PASSTHROUGH = 412;
  int PAST = 413;
  int PATH = 414;
  int PATTERN = 415;
  int PER = 416;
  int PERCENT = 417;
  int PERCENTILE_CONT = 418;
  int PERCENTILE_DISC = 419;
  int PERCENT_RANK = 420;
  int PERIOD = 421;
  int PERMUTE = 422;
  int PIVOT = 423;
  int PLACING = 424;
  int PLAN = 425;
  int PLI = 426;
  int PORTION = 427;
  int POSITION = 428;
  int POSITION_REGEX = 429;
  int POWER = 430;
  int PRECEDES = 431;
  int PRECEDING = 432;
  int PRECISION = 433;
  int PREPARE = 434;
  int PRESERVE = 435;
  int PREV = 436;
  int PRIMARY = 437;
  int PRIOR = 438;
  int PRIVILEGES = 439;
  int PROCEDURE = 440;
  int PUBLIC = 441;
  int QUALIFY = 442;
  int QUARTER = 443;
  int QUARTERS = 444;
  int RANGE = 445;
  int RANK = 446;
  int READ = 447;
  int READS = 448;
  int REAL = 449;
  int RECURSIVE = 450;
  int REF = 451;
  int REFERENCES = 452;
  int REFERENCING = 453;
  int REGR_AVGX = 454;
  int REGR_AVGY = 455;
  int REGR_COUNT = 456;
  int REGR_INTERCEPT = 457;
  int REGR_R2 = 458;
  int REGR_SLOPE = 459;
  int REGR_SXX = 460;
  int REGR_SXY = 461;
  int REGR_SYY = 462;
  int RELATIVE = 463;
  int RELEASE = 464;
  int REPEATABLE = 465;
  int REPLACE = 466;
  int RESET = 467;
  int RESPECT = 468;
  int RESTART = 469;
  int RESTRICT = 470;
  int RESULT = 471;
  int RETURN = 472;
  int RETURNED_CARDINALITY = 473;
  int RETURNED_LENGTH = 474;
  int RETURNED_OCTET_LENGTH = 475;
  int RETURNED_SQLSTATE = 476;
  int RETURNING = 477;
  int RETURNS = 478;
  int REVOKE = 479;
  int RIGHT = 480;
  int RLIKE = 481;
  int ROLE = 482;
  int ROLLBACK = 483;
  int ROLLUP = 484;
  int ROUTINE = 485;
  int ROUTINE_CATALOG = 486;
  int ROUTINE_NAME = 487;
  int ROUTINE_SCHEMA = 488;
  int ROW = 489;
  int ROW_COUNT = 490;
  int ROW_NUMBER = 491;
  int ROWS = 492;
  int RUNNING = 493;
  int SAFE_CAST = 494;
  int SAFE_OFFSET = 495;
  int SAFE_ORDINAL = 496;
  int SATURDAY = 497;
  int SAVEPOINT = 498;
  int SCALAR = 499;
  int SCALE = 500;
  int SCHEMA = 501;
  int SCHEMA_NAME = 502;
  int SCOPE = 503;
  int SCOPE_CATALOGS = 504;
  int SCOPE_NAME = 505;
  int SCOPE_SCHEMA = 506;
  int SCROLL = 507;
  int SEARCH = 508;
  int SECOND = 509;
  int SECONDS = 510;
  int SECTION = 511;
  int SECURITY = 512;
  int SEEK = 513;
  int SELECT = 514;
  int SELF = 515;
  int SENSITIVE = 516;
  int SEPARATOR = 517;
  int SEQUENCE = 518;
  int SERIALIZABLE = 519;
  int SERVER = 520;
  int SERVER_NAME = 521;
  int SESSION = 522;
  int SESSION_USER = 523;
  int SET = 524;
  int SETS = 525;
  int SET_MINUS = 526;
  int SHOW = 527;
  int SIMILAR = 528;
  int SIMPLE = 529;
  int SIZE = 530;
  int SKIP_ = 531;
  int SMALLINT = 532;
  int SOME = 533;
  int SOURCE = 534;
  int SPACE = 535;
  int SPECIFIC = 536;
  int SPECIFIC_NAME = 537;
  int SPECIFICTYPE = 538;
  int SQL = 539;
  int SQLEXCEPTION = 540;
  int SQLSTATE = 541;
  int SQLWARNING = 542;
  int SQL_BIGINT = 543;
  int SQL_BINARY = 544;
  int SQL_BIT = 545;
  int SQL_BLOB = 546;
  int SQL_BOOLEAN = 547;
  int SQL_CHAR = 548;
  int SQL_CLOB = 549;
  int SQL_DATE = 550;
  int SQL_DECIMAL = 551;
  int SQL_DOUBLE = 552;
  int SQL_FLOAT = 553;
  int SQL_INTEGER = 554;
  int SQL_INTERVAL_DAY = 555;
  int SQL_INTERVAL_DAY_TO_HOUR = 556;
  int SQL_INTERVAL_DAY_TO_MINUTE = 557;
  int SQL_INTERVAL_DAY_TO_SECOND = 558;
  int SQL_INTERVAL_HOUR = 559;
  int SQL_INTERVAL_HOUR_TO_MINUTE = 560;
  int SQL_INTERVAL_HOUR_TO_SECOND = 561;
  int SQL_INTERVAL_MINUTE = 562;
  int SQL_INTERVAL_MINUTE_TO_SECOND = 563;
  int SQL_INTERVAL_MONTH = 564;
  int SQL_INTERVAL_SECOND = 565;
  int SQL_INTERVAL_YEAR = 566;
  int SQL_INTERVAL_YEAR_TO_MONTH = 567;
  int SQL_LONGVARBINARY = 568;
  int SQL_LONGVARCHAR = 569;
  int SQL_LONGVARNCHAR = 570;
  int SQL_NCHAR = 571;
  int SQL_NCLOB = 572;
  int SQL_NUMERIC = 573;
  int SQL_NVARCHAR = 574;
  int SQL_REAL = 575;
  int SQL_SMALLINT = 576;
  int SQL_TIME = 577;
  int SQL_TIMESTAMP = 578;
  int SQL_TINYINT = 579;
  int SQL_TSI_DAY = 580;
  int SQL_TSI_FRAC_SECOND = 581;
  int SQL_TSI_HOUR = 582;
  int SQL_TSI_MICROSECOND = 583;
  int SQL_TSI_MINUTE = 584;
  int SQL_TSI_MONTH = 585;
  int SQL_TSI_QUARTER = 586;
  int SQL_TSI_SECOND = 587;
  int SQL_TSI_WEEK = 588;
  int SQL_TSI_YEAR = 589;
  int SQL_VARBINARY = 590;
  int SQL_VARCHAR = 591;
  int SQRT = 592;
  int START = 593;
  int STATE = 594;
  int STATEMENT = 595;
  int STATIC = 596;
  int STDDEV_POP = 597;
  int STDDEV_SAMP = 598;
  int STREAM = 599;
  int STRING_AGG = 600;
  int STRUCTURE = 601;
  int STYLE = 602;
  int SUBCLASS_ORIGIN = 603;
  int SUBMULTISET = 604;
  int SUBSET = 605;
  int SUBSTITUTE = 606;
  int SUBSTRING = 607;
  int SUBSTRING_REGEX = 608;
  int SUCCEEDS = 609;
  int SUM = 610;
  int SUNDAY = 611;
  int SYMMETRIC = 612;
  int SYSTEM = 613;
  int SYSTEM_TIME = 614;
  int SYSTEM_USER = 615;
  int TABLE = 616;
  int TABLE_NAME = 617;
  int TABLESAMPLE = 618;
  int TEMPORARY = 619;
  int THEN = 620;
  int THURSDAY = 621;
  int TIES = 622;
  int TIME = 623;
  int TIME_DIFF = 624;
  int TIME_TRUNC = 625;
  int TIMESTAMP = 626;
  int TIMESTAMPADD = 627;
  int TIMESTAMPDIFF = 628;
  int TIMESTAMP_DIFF = 629;
  int TIMESTAMP_TRUNC = 630;
  int TIMEZONE_HOUR = 631;
  int TIMEZONE_MINUTE = 632;
  int TINYINT = 633;
  int TO = 634;
  int TOP_LEVEL_COUNT = 635;
  int TRAILING = 636;
  int TRANSACTION = 637;
  int TRANSACTIONS_ACTIVE = 638;
  int TRANSACTIONS_COMMITTED = 639;
  int TRANSACTIONS_ROLLED_BACK = 640;
  int TRANSFORM = 641;
  int TRANSFORMS = 642;
  int TRANSLATE = 643;
  int TRANSLATE_REGEX = 644;
  int TRANSLATION = 645;
  int TREAT = 646;
  int TRIGGER = 647;
  int TRIGGER_CATALOG = 648;
  int TRIGGER_NAME = 649;
  int TRIGGER_SCHEMA = 650;
  int TRIM = 651;
  int TRIM_ARRAY = 652;
  int TRUE = 653;
  int TRUNCATE = 654;
  int TRY_CAST = 655;
  int TUESDAY = 656;
  int TUMBLE = 657;
  int TYPE = 658;
  int UESCAPE = 659;
  int UNBOUNDED = 660;
  int UNCOMMITTED = 661;
  int UNCONDITIONAL = 662;
  int UNDER = 663;
  int UNION = 664;
  int UNIQUE = 665;
  int UNKNOWN = 666;
  int UNPIVOT = 667;
  int UNNAMED = 668;
  int UNNEST = 669;
  int UPDATE = 670;
  int UPPER = 671;
  int UPSERT = 672;
  int USAGE = 673;
  int USER = 674;
  int USER_DEFINED_TYPE_CATALOG = 675;
  int USER_DEFINED_TYPE_CODE = 676;
  int USER_DEFINED_TYPE_NAME = 677;
  int USER_DEFINED_TYPE_SCHEMA = 678;
  int USING = 679;
  int UTF8 = 680;
  int UTF16 = 681;
  int UTF32 = 682;
  int VALUE = 683;
  int VALUES = 684;
  int VALUE_OF = 685;
  int VAR_POP = 686;
  int VAR_SAMP = 687;
  int VARBINARY = 688;
  int VARCHAR = 689;
  int VARYING = 690;
  int VERSION = 691;
  int VERSIONING = 692;
  int VIEW = 693;
  int WEDNESDAY = 694;
  int WEEK = 695;
  int WEEKS = 696;
  int WHEN = 697;
  int WHENEVER = 698;
  int WHERE = 699;
  int WIDTH_BUCKET = 700;
  int WINDOW = 701;
  int WITH = 702;
  int WITHIN = 703;
  int WITHOUT = 704;
  int WORK = 705;
  int WRAPPER = 706;
  int WRITE = 707;
  int XML = 708;
  int YEAR = 709;
  int YEARS = 710;
  int ZONE = 711;
  int UNSIGNED_INTEGER_LITERAL = 712;
  int APPROX_NUMERIC_LITERAL = 713;
  int DECIMAL_NUMERIC_LITERAL = 714;
  int EXPONENT = 715;
  int HEXDIGIT = 716;
  int WHITESPACE = 717;
  int BINARY_STRING_LITERAL = 718;
  int QUOTED_STRING = 719;
  int PREFIXED_STRING_LITERAL = 720;
  int UNICODE_STRING_LITERAL = 721;
  int C_STYLE_ESCAPED_STRING_LITERAL = 722;
  int CHARSETNAME = 723;
  int BIG_QUERY_DOUBLE_QUOTED_STRING = 724;
  int BIG_QUERY_QUOTED_STRING = 725;
  int UNICODE_QUOTED_ESCAPE_CHAR = 726;
  int LPAREN = 727;
  int RPAREN = 728;
  int LBRACE_D = 729;
  int LBRACE_T = 730;
  int LBRACE_TS = 731;
  int LBRACE_FN = 732;
  int LBRACE = 733;
  int RBRACE = 734;
  int LBRACKET = 735;
  int RBRACKET = 736;
  int SEMICOLON = 737;
  int DOT = 738;
  int COMMA = 739;
  int EQ = 740;
  int GT = 741;
  int LT = 742;
  int HOOK = 743;
  int COLON = 744;
  int LE = 745;
  int GE = 746;
  int NE = 747;
  int NE2 = 748;
  int PLUS = 749;
  int MINUS = 750;
  int STAR = 751;
  int SLASH = 752;
  int PERCENT_REMAINDER = 753;
  int CONCAT = 754;
  int NAMED_ARGUMENT_ASSIGNMENT = 755;
  int DOUBLE_PERIOD = 756;
  int QUOTE = 757;
  int DOUBLE_QUOTE = 758;
  int VERTICAL_BAR = 759;
  int CARET = 760;
  int DOLLAR = 761;
  int HINT_BEG = 767;
  int COMMENT_END = 768;
  int SINGLE_LINE_COMMENT = 771;
  int FORMAL_COMMENT = 772;
  int MULTI_LINE_COMMENT = 773;
  int BRACKET_QUOTED_IDENTIFIER = 775;
  int QUOTED_IDENTIFIER = 776;
  int BACK_QUOTED_IDENTIFIER = 777;
  int BIG_QUERY_BACK_QUOTED_IDENTIFIER = 778;
  int HYPHENATED_IDENTIFIER = 779;
  int IDENTIFIER = 780;
  int COLLATION_ID = 781;
  int UNICODE_QUOTED_IDENTIFIER = 782;
  int LETTER = 783;
  int DIGIT = 784;
  int BEL = 785;

  int DEFAULT = 0;
  int DQID = 1;
  int BTID = 2;
  int BQID = 3;
  int BQHID = 4;
  int IN_FORMAL_COMMENT = 5;
  int IN_MULTI_LINE_COMMENT = 6;

  String[] tokenImage = {
    "<EOF>",
    "\"A\"",
    "\"ABS\"",
    "\"ABSENT\"",
    "\"ABSOLUTE\"",
    "\"ACTION\"",
    "\"ADA\"",
    "\"ADD\"",
    "\"ADMIN\"",
    "\"AFTER\"",
    "\"ALL\"",
    "\"ALLOCATE\"",
    "\"ALLOW\"",
    "\"ALTER\"",
    "\"ALWAYS\"",
    "\"AND\"",
    "\"ANY\"",
    "\"APPLY\"",
    "\"ARE\"",
    "\"ARRAY\"",
    "\"ARRAY_AGG\"",
    "\"ARRAY_CONCAT_AGG\"",
    "\"ARRAY_MAX_CARDINALITY\"",
    "\"AS\"",
    "\"ASC\"",
    "\"ASENSITIVE\"",
    "\"ASSERTION\"",
    "\"ASSIGNMENT\"",
    "\"ASYMMETRIC\"",
    "\"AT\"",
    "\"ATOMIC\"",
    "\"ATTRIBUTE\"",
    "\"ATTRIBUTES\"",
    "\"AUTHORIZATION\"",
    "\"AVG\"",
    "\"BEFORE\"",
    "\"BEGIN\"",
    "\"BEGIN_FRAME\"",
    "\"BEGIN_PARTITION\"",
    "\"BERNOULLI\"",
    "\"BETWEEN\"",
    "\"BIGINT\"",
    "\"BINARY\"",
    "\"BIT\"",
    "\"BLOB\"",
    "\"BOOLEAN\"",
    "\"BOOL\"",
    "\"BOTH\"",
    "\"BREADTH\"",
    "\"BY\"",
    "\"C\"",
    "\"CALL\"",
    "\"CALLED\"",
    "\"CARDINALITY\"",
    "\"CASCADE\"",
    "\"CASCADED\"",
    "\"CASE\"",
    "\"CAST\"",
    "\"CATALOG\"",
    "\"CATALOG_NAME\"",
    "\"CEIL\"",
    "\"CEILING\"",
    "\"CENTURY\"",
    "\"CHAIN\"",
    "\"CHAR\"",
    "\"CHAR_LENGTH\"",
    "\"CHARACTER\"",
    "\"CHARACTER_LENGTH\"",
    "\"CHARACTER_SET_CATALOG\"",
    "\"CHARACTER_SET_NAME\"",
    "\"CHARACTER_SET_SCHEMA\"",
    "\"CHARACTERISTICS\"",
    "\"CHARACTERS\"",
    "\"CHECK\"",
    "\"CLASSIFIER\"",
    "\"CLASS_ORIGIN\"",
    "\"CLOB\"",
    "\"CLOSE\"",
    "\"COALESCE\"",
    "\"COBOL\"",
    "\"COLLATE\"",
    "\"COLLATION\"",
    "\"COLLATION_CATALOG\"",
    "\"COLLATION_NAME\"",
    "\"COLLATION_SCHEMA\"",
    "\"COLLECT\"",
    "\"COLUMN\"",
    "\"COLUMN_NAME\"",
    "\"COMMAND_FUNCTION\"",
    "\"COMMAND_FUNCTION_CODE\"",
    "\"COMMIT\"",
    "\"COMMITTED\"",
    "\"CONDITION\"",
    "\"CONDITIONAL\"",
    "\"CONDITION_NUMBER\"",
    "\"CONNECT\"",
    "\"CONNECTION\"",
    "\"CONNECTION_NAME\"",
    "\"CONSTRAINT\"",
    "\"CONSTRAINT_CATALOG\"",
    "\"CONSTRAINT_NAME\"",
    "\"CONSTRAINT_SCHEMA\"",
    "\"CONSTRAINTS\"",
    "\"CONSTRUCTOR\"",
    "\"CONTAINS\"",
    "\"CONTINUE\"",
    "\"CONVERT\"",
    "\"CORR\"",
    "\"CORRESPONDING\"",
    "\"COUNT\"",
    "\"COVAR_POP\"",
    "\"COVAR_SAMP\"",
    "\"CREATE\"",
    "\"CROSS\"",
    "\"CUBE\"",
    "\"CUME_DIST\"",
    "\"CURRENT\"",
    "\"CURRENT_CATALOG\"",
    "\"CURRENT_DATE\"",
    "\"CURRENT_DEFAULT_TRANSFORM_GROUP\"",
    "\"CURRENT_PATH\"",
    "\"CURRENT_ROLE\"",
    "\"CURRENT_ROW\"",
    "\"CURRENT_SCHEMA\"",
    "\"CURRENT_TIME\"",
    "\"CURRENT_TIMESTAMP\"",
    "\"CURRENT_TRANSFORM_GROUP_FOR_TYPE\"",
    "\"CURRENT_USER\"",
    "\"CURSOR\"",
    "\"CURSOR_NAME\"",
    "\"CYCLE\"",
    "\"DATA\"",
    "\"DATABASE\"",
    "\"DATE\"",
    "\"DATE_DIFF\"",
    "\"DATE_TRUNC\"",
    "\"DATETIME\"",
    "\"DATETIME_DIFF\"",
    "\"DATETIME_INTERVAL_CODE\"",
    "\"DATETIME_INTERVAL_PRECISION\"",
    "\"DATETIME_TRUNC\"",
    "\"DAY\"",
    "\"DAYOFWEEK\"",
    "\"DAYOFYEAR\"",
    "\"DAYS\"",
    "\"DEALLOCATE\"",
    "\"DEC\"",
    "\"DECADE\"",
    "\"DECIMAL\"",
    "\"DECLARE\"",
    "\"DEFAULT\"",
    "\"DEFAULTS\"",
    "\"DEFERRABLE\"",
    "\"DEFERRED\"",
    "\"DEFINE\"",
    "\"DEFINED\"",
    "\"DEFINER\"",
    "\"DEGREE\"",
    "\"DELETE\"",
    "\"DENSE_RANK\"",
    "\"DEPTH\"",
    "\"DEREF\"",
    "\"DERIVED\"",
    "\"DESC\"",
    "\"DESCRIBE\"",
    "\"DESCRIPTION\"",
    "\"DESCRIPTOR\"",
    "\"DETERMINISTIC\"",
    "\"DIAGNOSTICS\"",
    "\"DISALLOW\"",
    "\"DISCONNECT\"",
    "\"DISPATCH\"",
    "\"DISTINCT\"",
    "\"DOMAIN\"",
    "\"DOT\"",
    "\"DOUBLE\"",
    "\"DOW\"",
    "\"DOY\"",
    "\"DROP\"",
    "\"DYNAMIC\"",
    "\"DYNAMIC_FUNCTION\"",
    "\"DYNAMIC_FUNCTION_CODE\"",
    "\"EACH\"",
    "\"ELEMENT\"",
    "\"ELSE\"",
    "\"EMPTY\"",
    "\"ENCODING\"",
    "\"END\"",
    "\"END-EXEC\"",
    "\"END_FRAME\"",
    "\"END_PARTITION\"",
    "\"EPOCH\"",
    "\"EQUALS\"",
    "\"ERROR\"",
    "\"ESCAPE\"",
    "\"EVERY\"",
    "\"EXCEPT\"",
    "\"EXCEPTION\"",
    "\"EXCLUDE\"",
    "\"EXCLUDING\"",
    "\"EXEC\"",
    "\"EXECUTE\"",
    "\"EXISTS\"",
    "\"EXP\"",
    "\"EXPLAIN\"",
    "\"EXTEND\"",
    "\"EXTERNAL\"",
    "\"EXTRACT\"",
    "\"FALSE\"",
    "\"FETCH\"",
    "\"FILTER\"",
    "\"FINAL\"",
    "\"FIRST\"",
    "\"FIRST_VALUE\"",
    "\"FLOAT\"",
    "\"FLOOR\"",
    "\"FOLLOWING\"",
    "\"FOR\"",
    "\"FORMAT\"",
    "\"FOREIGN\"",
    "\"FORTRAN\"",
    "\"FOUND\"",
    "\"FRAC_SECOND\"",
    "\"FRAME_ROW\"",
    "\"FREE\"",
    "\"FRIDAY\"",
    "\"FROM\"",
    "\"FULL\"",
    "\"FUNCTION\"",
    "\"FUSION\"",
    "\"G\"",
    "\"GENERAL\"",
    "\"GENERATED\"",
    "\"GEOMETRY\"",
    "\"GET\"",
    "\"GLOBAL\"",
    "\"GO\"",
    "\"GOTO\"",
    "\"GRANT\"",
    "\"GRANTED\"",
    "\"GROUP\"",
    "\"GROUP_CONCAT\"",
    "\"GROUPING\"",
    "\"GROUPS\"",
    "\"HAVING\"",
    "\"HIERARCHY\"",
    "\"HOLD\"",
    "\"HOP\"",
    "\"HOUR\"",
    "\"HOURS\"",
    "\"IDENTITY\"",
    "\"IGNORE\"",
    "\"ILIKE\"",
    "\"IMMEDIATE\"",
    "\"IMMEDIATELY\"",
    "\"IMPLEMENTATION\"",
    "\"IMPORT\"",
    "\"IN\"",
    "\"INCLUDE\"",
    "\"INCLUDING\"",
    "\"INCREMENT\"",
    "\"INDICATOR\"",
    "\"INITIAL\"",
    "\"INITIALLY\"",
    "\"INNER\"",
    "\"INOUT\"",
    "\"INPUT\"",
    "\"INSENSITIVE\"",
    "\"INSERT\"",
    "\"INSTANCE\"",
    "\"INSTANTIABLE\"",
    "\"INT\"",
    "\"INTEGER\"",
    "\"INTERSECT\"",
    "\"INTERSECTION\"",
    "\"INTERVAL\"",
    "\"INTO\"",
    "\"INVOKER\"",
    "\"IS\"",
    "\"ISODOW\"",
    "\"ISOYEAR\"",
    "\"ISOLATION\"",
    "\"JAVA\"",
    "\"JOIN\"",
    "\"JSON\"",
    "\"JSON_ARRAY\"",
    "\"JSON_ARRAYAGG\"",
    "\"JSON_EXISTS\"",
    "\"JSON_OBJECT\"",
    "\"JSON_OBJECTAGG\"",
    "\"JSON_QUERY\"",
    "\"JSON_VALUE\"",
    "\"K\"",
    "\"KEY\"",
    "\"KEY_MEMBER\"",
    "\"KEY_TYPE\"",
    "\"LABEL\"",
    "\"LAG\"",
    "\"LANGUAGE\"",
    "\"LARGE\"",
    "\"LAST\"",
    "\"LAST_VALUE\"",
    "\"LATERAL\"",
    "\"LEAD\"",
    "\"LEADING\"",
    "\"LEFT\"",
    "\"LENGTH\"",
    "\"LEVEL\"",
    "\"LIBRARY\"",
    "\"LIKE\"",
    "\"LIKE_REGEX\"",
    "\"LIMIT\"",
    "\"LN\"",
    "\"LOCAL\"",
    "\"LOCALTIME\"",
    "\"LOCALTIMESTAMP\"",
    "\"LOCATOR\"",
    "\"LOWER\"",
    "\"M\"",
    "\"MAP\"",
    "\"MATCH\"",
    "\"MATCHED\"",
    "\"MATCHES\"",
    "\"MATCH_NUMBER\"",
    "\"MATCH_RECOGNIZE\"",
    "\"MAX\"",
    "\"MAXVALUE\"",
    "\"MEASURES\"",
    "\"MEMBER\"",
    "\"MERGE\"",
    "\"MESSAGE_LENGTH\"",
    "\"MESSAGE_OCTET_LENGTH\"",
    "\"MESSAGE_TEXT\"",
    "\"METHOD\"",
    "\"MICROSECOND\"",
    "\"MILLISECOND\"",
    "\"MILLENNIUM\"",
    "\"MIN\"",
    "\"MINUTE\"",
    "\"MINUTES\"",
    "\"MINVALUE\"",
    "\"MOD\"",
    "\"MODIFIES\"",
    "\"MODULE\"",
    "\"MONDAY\"",
    "\"MONTH\"",
    "\"MONTHS\"",
    "\"MORE\"",
    "\"MULTISET\"",
    "\"MUMPS\"",
    "\"NAME\"",
    "\"NAMES\"",
    "\"NANOSECOND\"",
    "\"NATIONAL\"",
    "\"NATURAL\"",
    "\"NCHAR\"",
    "\"NCLOB\"",
    "\"NESTING\"",
    "\"NEW\"",
    "\"NEXT\"",
    "\"NO\"",
    "\"NONE\"",
    "\"NORMALIZE\"",
    "\"NORMALIZED\"",
    "\"NOT\"",
    "\"NTH_VALUE\"",
    "\"NTILE\"",
    "\"NULL\"",
    "\"NULLABLE\"",
    "\"NULLIF\"",
    "\"NULLS\"",
    "\"NUMBER\"",
    "\"NUMERIC\"",
    "\"OBJECT\"",
    "\"OCCURRENCES_REGEX\"",
    "\"OCTET_LENGTH\"",
    "\"OCTETS\"",
    "\"OF\"",
    "\"OFFSET\"",
    "\"OLD\"",
    "\"OMIT\"",
    "\"ON\"",
    "\"ONE\"",
    "\"ONLY\"",
    "\"OPEN\"",
    "\"OPTION\"",
    "\"OPTIONS\"",
    "\"OR\"",
    "\"ORDER\"",
    "\"ORDERING\"",
    "\"ORDINAL\"",
    "\"ORDINALITY\"",
    "\"OTHERS\"",
    "\"OUT\"",
    "\"OUTER\"",
    "\"OUTPUT\"",
    "\"OVER\"",
    "\"OVERLAPS\"",
    "\"OVERLAY\"",
    "\"OVERRIDING\"",
    "\"PAD\"",
    "\"PARAMETER\"",
    "\"PARAMETER_MODE\"",
    "\"PARAMETER_NAME\"",
    "\"PARAMETER_ORDINAL_POSITION\"",
    "\"PARAMETER_SPECIFIC_CATALOG\"",
    "\"PARAMETER_SPECIFIC_NAME\"",
    "\"PARAMETER_SPECIFIC_SCHEMA\"",
    "\"PARTIAL\"",
    "\"PARTITION\"",
    "\"PASCAL\"",
    "\"PASSING\"",
    "\"PASSTHROUGH\"",
    "\"PAST\"",
    "\"PATH\"",
    "\"PATTERN\"",
    "\"PER\"",
    "\"PERCENT\"",
    "\"PERCENTILE_CONT\"",
    "\"PERCENTILE_DISC\"",
    "\"PERCENT_RANK\"",
    "\"PERIOD\"",
    "\"PERMUTE\"",
    "\"PIVOT\"",
    "\"PLACING\"",
    "\"PLAN\"",
    "\"PLI\"",
    "\"PORTION\"",
    "\"POSITION\"",
    "\"POSITION_REGEX\"",
    "\"POWER\"",
    "\"PRECEDES\"",
    "\"PRECEDING\"",
    "\"PRECISION\"",
    "\"PREPARE\"",
    "\"PRESERVE\"",
    "\"PREV\"",
    "\"PRIMARY\"",
    "\"PRIOR\"",
    "\"PRIVILEGES\"",
    "\"PROCEDURE\"",
    "\"PUBLIC\"",
    "\"QUALIFY\"",
    "\"QUARTER\"",
    "\"QUARTERS\"",
    "\"RANGE\"",
    "\"RANK\"",
    "\"READ\"",
    "\"READS\"",
    "\"REAL\"",
    "\"RECURSIVE\"",
    "\"REF\"",
    "\"REFERENCES\"",
    "\"REFERENCING\"",
    "\"REGR_AVGX\"",
    "\"REGR_AVGY\"",
    "\"REGR_COUNT\"",
    "\"REGR_INTERCEPT\"",
    "\"REGR_R2\"",
    "\"REGR_SLOPE\"",
    "\"REGR_SXX\"",
    "\"REGR_SXY\"",
    "\"REGR_SYY\"",
    "\"RELATIVE\"",
    "\"RELEASE\"",
    "\"REPEATABLE\"",
    "\"REPLACE\"",
    "\"RESET\"",
    "\"RESPECT\"",
    "\"RESTART\"",
    "\"RESTRICT\"",
    "\"RESULT\"",
    "\"RETURN\"",
    "\"RETURNED_CARDINALITY\"",
    "\"RETURNED_LENGTH\"",
    "\"RETURNED_OCTET_LENGTH\"",
    "\"RETURNED_SQLSTATE\"",
    "\"RETURNING\"",
    "\"RETURNS\"",
    "\"REVOKE\"",
    "\"RIGHT\"",
    "\"RLIKE\"",
    "\"ROLE\"",
    "\"ROLLBACK\"",
    "\"ROLLUP\"",
    "\"ROUTINE\"",
    "\"ROUTINE_CATALOG\"",
    "\"ROUTINE_NAME\"",
    "\"ROUTINE_SCHEMA\"",
    "\"ROW\"",
    "\"ROW_COUNT\"",
    "\"ROW_NUMBER\"",
    "\"ROWS\"",
    "\"RUNNING\"",
    "\"SAFE_CAST\"",
    "\"SAFE_OFFSET\"",
    "\"SAFE_ORDINAL\"",
    "\"SATURDAY\"",
    "\"SAVEPOINT\"",
    "\"SCALAR\"",
    "\"SCALE\"",
    "\"SCHEMA\"",
    "\"SCHEMA_NAME\"",
    "\"SCOPE\"",
    "\"SCOPE_CATALOGS\"",
    "\"SCOPE_NAME\"",
    "\"SCOPE_SCHEMA\"",
    "\"SCROLL\"",
    "\"SEARCH\"",
    "\"SECOND\"",
    "\"SECONDS\"",
    "\"SECTION\"",
    "\"SECURITY\"",
    "\"SEEK\"",
    "\"SELECT\"",
    "\"SELF\"",
    "\"SENSITIVE\"",
    "\"SEPARATOR\"",
    "\"SEQUENCE\"",
    "\"SERIALIZABLE\"",
    "\"SERVER\"",
    "\"SERVER_NAME\"",
    "\"SESSION\"",
    "\"SESSION_USER\"",
    "\"SET\"",
    "\"SETS\"",
    "\"MINUS\"",
    "\"SHOW\"",
    "\"SIMILAR\"",
    "\"SIMPLE\"",
    "\"SIZE\"",
    "\"SKIP\"",
    "\"SMALLINT\"",
    "\"SOME\"",
    "\"SOURCE\"",
    "\"SPACE\"",
    "\"SPECIFIC\"",
    "\"SPECIFIC_NAME\"",
    "\"SPECIFICTYPE\"",
    "\"SQL\"",
    "\"SQLEXCEPTION\"",
    "\"SQLSTATE\"",
    "\"SQLWARNING\"",
    "\"SQL_BIGINT\"",
    "\"SQL_BINARY\"",
    "\"SQL_BIT\"",
    "\"SQL_BLOB\"",
    "\"SQL_BOOLEAN\"",
    "\"SQL_CHAR\"",
    "\"SQL_CLOB\"",
    "\"SQL_DATE\"",
    "\"SQL_DECIMAL\"",
    "\"SQL_DOUBLE\"",
    "\"SQL_FLOAT\"",
    "\"SQL_INTEGER\"",
    "\"SQL_INTERVAL_DAY\"",
    "\"SQL_INTERVAL_DAY_TO_HOUR\"",
    "\"SQL_INTERVAL_DAY_TO_MINUTE\"",
    "\"SQL_INTERVAL_DAY_TO_SECOND\"",
    "\"SQL_INTERVAL_HOUR\"",
    "\"SQL_INTERVAL_HOUR_TO_MINUTE\"",
    "\"SQL_INTERVAL_HOUR_TO_SECOND\"",
    "\"SQL_INTERVAL_MINUTE\"",
    "\"SQL_INTERVAL_MINUTE_TO_SECOND\"",
    "\"SQL_INTERVAL_MONTH\"",
    "\"SQL_INTERVAL_SECOND\"",
    "\"SQL_INTERVAL_YEAR\"",
    "\"SQL_INTERVAL_YEAR_TO_MONTH\"",
    "\"SQL_LONGVARBINARY\"",
    "\"SQL_LONGVARCHAR\"",
    "\"SQL_LONGVARNCHAR\"",
    "\"SQL_NCHAR\"",
    "\"SQL_NCLOB\"",
    "\"SQL_NUMERIC\"",
    "\"SQL_NVARCHAR\"",
    "\"SQL_REAL\"",
    "\"SQL_SMALLINT\"",
    "\"SQL_TIME\"",
    "\"SQL_TIMESTAMP\"",
    "\"SQL_TINYINT\"",
    "\"SQL_TSI_DAY\"",
    "\"SQL_TSI_FRAC_SECOND\"",
    "\"SQL_TSI_HOUR\"",
    "\"SQL_TSI_MICROSECOND\"",
    "\"SQL_TSI_MINUTE\"",
    "\"SQL_TSI_MONTH\"",
    "\"SQL_TSI_QUARTER\"",
    "\"SQL_TSI_SECOND\"",
    "\"SQL_TSI_WEEK\"",
    "\"SQL_TSI_YEAR\"",
    "\"SQL_VARBINARY\"",
    "\"SQL_VARCHAR\"",
    "\"SQRT\"",
    "\"START\"",
    "\"STATE\"",
    "\"STATEMENT\"",
    "\"STATIC\"",
    "\"STDDEV_POP\"",
    "\"STDDEV_SAMP\"",
    "\"STREAM\"",
    "\"STRING_AGG\"",
    "\"STRUCTURE\"",
    "\"STYLE\"",
    "\"SUBCLASS_ORIGIN\"",
    "\"SUBMULTISET\"",
    "\"SUBSET\"",
    "\"SUBSTITUTE\"",
    "\"SUBSTRING\"",
    "\"SUBSTRING_REGEX\"",
    "\"SUCCEEDS\"",
    "\"SUM\"",
    "\"SUNDAY\"",
    "\"SYMMETRIC\"",
    "\"SYSTEM\"",
    "\"SYSTEM_TIME\"",
    "\"SYSTEM_USER\"",
    "\"TABLE\"",
    "\"TABLE_NAME\"",
    "\"TABLESAMPLE\"",
    "\"TEMPORARY\"",
    "\"THEN\"",
    "\"THURSDAY\"",
    "\"TIES\"",
    "\"TIME\"",
    "\"TIME_DIFF\"",
    "\"TIME_TRUNC\"",
    "\"TIMESTAMP\"",
    "\"TIMESTAMPADD\"",
    "\"TIMESTAMPDIFF\"",
    "\"TIMESTAMP_DIFF\"",
    "\"TIMESTAMP_TRUNC\"",
    "\"TIMEZONE_HOUR\"",
    "\"TIMEZONE_MINUTE\"",
    "\"TINYINT\"",
    "\"TO\"",
    "\"TOP_LEVEL_COUNT\"",
    "\"TRAILING\"",
    "\"TRANSACTION\"",
    "\"TRANSACTIONS_ACTIVE\"",
    "\"TRANSACTIONS_COMMITTED\"",
    "\"TRANSACTIONS_ROLLED_BACK\"",
    "\"TRANSFORM\"",
    "\"TRANSFORMS\"",
    "\"TRANSLATE\"",
    "\"TRANSLATE_REGEX\"",
    "\"TRANSLATION\"",
    "\"TREAT\"",
    "\"TRIGGER\"",
    "\"TRIGGER_CATALOG\"",
    "\"TRIGGER_NAME\"",
    "\"TRIGGER_SCHEMA\"",
    "\"TRIM\"",
    "\"TRIM_ARRAY\"",
    "\"TRUE\"",
    "\"TRUNCATE\"",
    "\"TRY_CAST\"",
    "\"TUESDAY\"",
    "\"TUMBLE\"",
    "\"TYPE\"",
    "\"UESCAPE\"",
    "\"UNBOUNDED\"",
    "\"UNCOMMITTED\"",
    "\"UNCONDITIONAL\"",
    "\"UNDER\"",
    "\"UNION\"",
    "\"UNIQUE\"",
    "\"UNKNOWN\"",
    "\"UNPIVOT\"",
    "\"UNNAMED\"",
    "\"UNNEST\"",
    "\"UPDATE\"",
    "\"UPPER\"",
    "\"UPSERT\"",
    "\"USAGE\"",
    "\"USER\"",
    "\"USER_DEFINED_TYPE_CATALOG\"",
    "\"USER_DEFINED_TYPE_CODE\"",
    "\"USER_DEFINED_TYPE_NAME\"",
    "\"USER_DEFINED_TYPE_SCHEMA\"",
    "\"USING\"",
    "\"UTF8\"",
    "\"UTF16\"",
    "\"UTF32\"",
    "\"VALUE\"",
    "\"VALUES\"",
    "\"VALUE_OF\"",
    "\"VAR_POP\"",
    "\"VAR_SAMP\"",
    "\"VARBINARY\"",
    "\"VARCHAR\"",
    "\"VARYING\"",
    "\"VERSION\"",
    "\"VERSIONING\"",
    "\"VIEW\"",
    "\"WEDNESDAY\"",
    "\"WEEK\"",
    "\"WEEKS\"",
    "\"WHEN\"",
    "\"WHENEVER\"",
    "\"WHERE\"",
    "\"WIDTH_BUCKET\"",
    "\"WINDOW\"",
    "\"WITH\"",
    "\"WITHIN\"",
    "\"WITHOUT\"",
    "\"WORK\"",
    "\"WRAPPER\"",
    "\"WRITE\"",
    "\"XML\"",
    "\"YEAR\"",
    "\"YEARS\"",
    "\"ZONE\"",
    "<UNSIGNED_INTEGER_LITERAL>",
    "<APPROX_NUMERIC_LITERAL>",
    "<DECIMAL_NUMERIC_LITERAL>",
    "<EXPONENT>",
    "<HEXDIGIT>",
    "<WHITESPACE>",
    "<BINARY_STRING_LITERAL>",
    "<QUOTED_STRING>",
    "<PREFIXED_STRING_LITERAL>",
    "<UNICODE_STRING_LITERAL>",
    "<C_STYLE_ESCAPED_STRING_LITERAL>",
    "<CHARSETNAME>",
    "<BIG_QUERY_DOUBLE_QUOTED_STRING>",
    "<BIG_QUERY_QUOTED_STRING>",
    "<UNICODE_QUOTED_ESCAPE_CHAR>",
    "\"(\"",
    "\")\"",
    "<LBRACE_D>",
    "<LBRACE_T>",
    "<LBRACE_TS>",
    "<LBRACE_FN>",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"?\"",
    "\":\"",
    "\"<=\"",
    "\">=\"",
    "\"<>\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"||\"",
    "\"=>\"",
    "\"..\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"|\"",
    "\"^\"",
    "\"$\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"/*+\"",
    "\"*/\"",
    "<token of kind 769>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<token of kind 774>",
    "<BRACKET_QUOTED_IDENTIFIER>",
    "<QUOTED_IDENTIFIER>",
    "<BACK_QUOTED_IDENTIFIER>",
    "<BIG_QUERY_BACK_QUOTED_IDENTIFIER>",
    "<HYPHENATED_IDENTIFIER>",
    "<IDENTIFIER>",
    "<COLLATION_ID>",
    "<UNICODE_QUOTED_IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<BEL>",
  };

}
